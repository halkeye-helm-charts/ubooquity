apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ubooquity.fullname" . }}
  labels:
{{ include "ubooquity.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
{{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
{{ if eq .Values.strategy.type "Recreate" }}
    rollingUpdate: null
{{- end }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ubooquity.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ubooquity.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "ubooquity.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - { name: PUID, value: {{ .Values.puid | quote }} }
            - { name: GUID, value: {{ .Values.guid | quote }} }
            - { name: TZ, value: {{ .Values.timezone | quote }} }
            - { name: MAXMEM, value: {{ .Values.maxmem | quote }} }
          volumeMounts:
            - mountPath: /config
              name: config
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ubooquity.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
